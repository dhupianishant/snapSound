{"ast":null,"code":"var _jsxFileName = \"E:\\\\snapSound\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [mood, setMood] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n\n  // Handle Image Upload\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setImage(URL.createObjectURL(file)); // Preview image\n    }\n  };\n\n  // Send Image to Backend\n  const analyzeImage = async () => {\n    if (!image) {\n      alert(\"Please upload an image first!\");\n      return;\n    }\n    const response = await fetch(\"http://localhost:5000/analyze-image\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        imageUrl: image\n      }) // Send image URL\n    });\n    const data = await response.json();\n    setMood(data.mood);\n    setSongs(data.songs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload an Image to Get a Song Recommendation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Preview\",\n      style: {\n        width: \"200px\",\n        marginTop: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: analyzeImage,\n      children: \"Analyze Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), mood && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Mood Detected: \", mood]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recommended Songs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: song.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [song.name, \" by \", song.artist]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"2uXE1anyqbCDx5FP4Zmyx88K/0U=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ImageUploader","_s","image","setImage","mood","setMood","songs","setSongs","handleImageUpload","event","file","target","files","URL","createObjectURL","analyzeImage","alert","response","fetch","method","headers","body","JSON","stringify","imageUrl","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","src","alt","style","width","marginTop","onClick","map","song","index","href","url","rel","name","artist","_c","$RefreshReg$"],"sources":["E:/snapSound/frontend/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst ImageUploader = () => {\n  const [image, setImage] = useState(null);\n  const [mood, setMood] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n\n  // Handle Image Upload\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setImage(URL.createObjectURL(file)); // Preview image\n    }\n  };\n\n  // Send Image to Backend\n  const analyzeImage = async () => {\n    if (!image) {\n      alert(\"Please upload an image first!\");\n      return;\n    }\n\n    const response = await fetch(\"http://localhost:5000/analyze-image\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ imageUrl: image }), // Send image URL\n    });\n\n    const data = await response.json();\n    setMood(data.mood);\n    setSongs(data.songs);\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Upload an Image to Get a Song Recommendation</h2>\n      <input type=\"file\" onChange={handleImageUpload} />\n      {image && <img src={image} alt=\"Preview\" style={{ width: \"200px\", marginTop: \"10px\" }} />}\n      <button onClick={analyzeImage}>Analyze Image</button>\n\n      {mood && (\n        <div>\n          <h3>Mood Detected: {mood}</h3>\n          <h3>Recommended Songs:</h3>\n          <ul>\n            {songs.map((song, index) => (\n              <li key={index}>\n                <a href={song.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {song.name} by {song.artist}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ImageUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}