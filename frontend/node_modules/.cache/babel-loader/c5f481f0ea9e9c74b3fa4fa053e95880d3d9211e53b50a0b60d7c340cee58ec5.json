{"ast":null,"code":"var _jsxFileName = \"E:\\\\snapSound\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [song, setSong] = useState(null);\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    setImage(URL.createObjectURL(file));\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    fetch(\"http://localhost:5000/analyze\", {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json()).then(data => setSong(data.song)).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload an Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Uploaded\",\n      width: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), song && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Suggested Song: \", song.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Artist: \", song.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EyIfiljl++TSlXtafYJ0fyi/DXg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","image","setImage","song","setSong","handleImageUpload","event","file","target","files","URL","createObjectURL","formData","FormData","append","fetch","method","body","then","res","json","data","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","src","alt","width","name","artist","_c","$RefreshReg$"],"sources":["E:/snapSound/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [song, setSong] = useState(null);\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    setImage(URL.createObjectURL(file));\n\n    const formData = new FormData();\n    formData.append(\"image\", file);\n\n    fetch(\"http://localhost:5000/analyze\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((data) => setSong(data.song))\n      .catch((err) => console.error(err));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Upload an Image</h1>\n      <input type=\"file\" onChange={handleImageUpload} />\n      {image && <img src={image} alt=\"Uploaded\" width=\"300\" />}\n      {song && (\n        <div>\n          <h2>Suggested Song: {song.name}</h2>\n          <p>Artist: {song.artist}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCP,QAAQ,CAACQ,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC;IAEnC,MAAMK,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,IAAI,CAAC;IAE9BQ,KAAK,CAAC,+BAA+B,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;IACR,CAAC,CAAC,CACCM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKjB,OAAO,CAACiB,IAAI,CAAClB,IAAI,CAAC,CAAC,CAClCmB,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC;EAED,oBACEzB,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA;MAAA6B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjC,OAAA;MAAOkC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAE5B;IAAkB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjD9B,KAAK,iBAAIH,OAAA;MAAKoC,GAAG,EAAEjC,KAAM;MAACkC,GAAG,EAAC,UAAU;MAACC,KAAK,EAAC;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvD5B,IAAI,iBACHL,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAA6B,QAAA,GAAI,kBAAgB,EAACxB,IAAI,CAACkC,IAAI;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpCjC,OAAA;QAAA6B,QAAA,GAAG,UAAQ,EAACxB,IAAI,CAACmC,MAAM;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/B,EAAA,CAjCQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}